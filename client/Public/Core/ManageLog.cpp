/*$T MapServer/Server/Base/ManageLog.cpp GC 1.140 10/10/07 10:07:20 */


/*$6
 +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 */


#include "stdafx.h"
#include "BaseTool.h"
#include "BaseTool.h"
#include "stdarg.h"
#include "Util.h"
#include <memory>
#include "ManageLog.h"
#include "OnlinePlayer.h"
#include "MessageDefine.h"
#include "MessageFactoryManager.h"

using namespace Messages;

ManageLog	g_ManageLog;

/*
 =======================================================================================================================
 =======================================================================================================================
 */

ManageLog::ManageLog()
{
	Clear();
}

/*
 =======================================================================================================================
 =======================================================================================================================
 */
ManageLog::~ManageLog()
{
}

/*
 =======================================================================================================================
 =======================================================================================================================
 */
BOOL ManageLog::HeartBeat(ulong dwTime)
{
	__GUARD__ if(m_dwTimer <= dwTime)
	{
		ExecuteSaveLog();
		Reset();
	}

	if(!m_MessageCatchLogTimer.IsSetTimer())
	{
		m_MessageCatchLogTimer.BeginTimer(1000 * 60 * 30, dwTime);
	}

	if(m_MessageCatchLogTimer.CountingTimer(dwTime))
	{
		/*
		 * 时间到了 ;
		 * for( uint32 _Idx=0;
		 * _Idx<MESSAGE_MAX;
		 * _Idx++ ) ;
		 * { ;
		 * QLogSystem::SLOW_LOG( SLOW_LOG_DBCENTER, "Packet: %d-%d", _Idx,
		 * GETMESSAGE_ALLOC_COUNT(_Idx) ) ;
		 * }
		 */
		return TRUE;
	}

	return TRUE;
	__UNGUARD__ return FALSE;
}

/*
 =======================================================================================================================
 =======================================================================================================================
 */
void ManageLog::Clear(void)
{
	/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
	__GUARD__	m_dwTimer = 600 * 1000;
	/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/

	__UNGUARD__
}

/*
 =======================================================================================================================
 =======================================================================================================================
 */
void ManageLog::Init(void)
{
	/*~~~~~~~~~~~~~~~~~~~~*/
	__GUARD__	Reset();
	/*~~~~~~~~~~~~~~~~~~~~*/

	__UNGUARD__
}

/*
 =======================================================================================================================
 =======================================================================================================================
 */
void ManageLog::ExecuteSaveLog()
{
	/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
	__GUARD__ QLogSystem::	SLOW_LOG
				(
					SLOW_LOG_ONLINE_USR_CNT,
					"LT%d:%u,%d,\'%s\'",
					MLT_ONLENE_USER_COUNT,
					GET_TIME().GetCTime(),
					g_pOnlinePlayer->GetTotalCount(),
					g_Config.m_ServerInfo.m_World.m_IP
				);
	/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/

	__UNGUARD__
}

/*
 =======================================================================================================================
 =======================================================================================================================
 */
void ManageLog::Reset()
{
	/* 根据配置文件中规定的存档间隔初始化写日志的Timer */
	m_dwTimer = g_Config.m_ConfigInfo.m_dwOnLineUserCountTimer * 1000 + GET_TIME().TickCount();
}
