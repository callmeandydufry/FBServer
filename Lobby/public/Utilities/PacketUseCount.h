/*$T Common/Utilities/MessageUseCount.h GC 1.140 10/10/07 10:06:57 */


/*$6
 +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 */


#ifndef MessageUseCount_h__15_12_2008_15_51
#define MessageUseCount_h__15_12_2008_15_51

class	MessageUseCount
{
	enum SORT_TYPE { PUC_SORT_SEND_COUNT = 0, PUC_SORT_SIZE_COUNT };
	struct MessageInfomation
	{
		int32	iMessageID;
		uint32	iMessageSendCount;
		uint32	iMessageSizeCount;
	};

/*
 -----------------------------------------------------------------------------------------------------------------------
 -----------------------------------------------------------------------------------------------------------------------
 */
public:
	void	Reset();

	void	SetActive(ut_id_map iSceneID);

	void	SaveInfoToLogFile(int32 iType);

	void	CacheInfomation(int32 iSize, int32 iMessageID, ut_id_map iSceneID);

/*
 -----------------------------------------------------------------------------------------------------------------------
 -----------------------------------------------------------------------------------------------------------------------
 */
private:
	void		Sort(int32 iType);
	static int32	CompareBySendCount(const void *pArg1, const void *pArg2);
	static int32	CompareBySizeCount(const void *pArg1, const void *pArg2);

/*
 -----------------------------------------------------------------------------------------------------------------------
 -----------------------------------------------------------------------------------------------------------------------
 */
private:
	MessageUseCount();
	~	MessageUseCount();

/*
 -----------------------------------------------------------------------------------------------------------------------
 -----------------------------------------------------------------------------------------------------------------------
 */
private:
	MessageInfomation	m_aMessageInfo[MESSAGE_MAX];
	MessageInfomation	m_aMessageInfoSort[MESSAGE_MAX];
	ut_id_map			m_iMapID;
	FastLock		m_Lock;

/*
 -----------------------------------------------------------------------------------------------------------------------
 -----------------------------------------------------------------------------------------------------------------------
 */
public:
	static MessageUseCount	*GetInstance();

	static void		CreateInstance();

	static void		DeleteInstance();

/*
 -----------------------------------------------------------------------------------------------------------------------
 -----------------------------------------------------------------------------------------------------------------------
 */
private:
	static MessageUseCount	*m_pInstance;
};
#endif
